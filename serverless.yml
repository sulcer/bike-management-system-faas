# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: sulcer
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: faas
service: bike-management-system

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    BIKES_TABLE: ${self:service}-bikes
    JWT_SECRET: secret

plugins:
  - serverless-offline
  - serverless-localstack

custom:
  localstack:
    stages:
      - local

functions:
  login:
    handler: handler.login
    events:
      - http:
          path: /login
          method: post
          cors: true

  createBike:
    handler: handler.createBike
    events:
      - http:
          path: /bikes
          method: post
          cors: true

  getBikes:
    handler: handler.getBikes
    events:
      - http:
          path: /bikes
          method: get
          cors: true

  getBikeById:
    handler: handler.getBikeById
    events:
      - http:
          path: /bikes/{id}
          method: get
          cors: true

  updateBike:
    handler: handler.updateBike
    events:
      - http:
          path: /bikes/{id}
          method: put
          cors: true

  deleteBike:
    handler: handler.deleteBike
    events:
      - http:
          path: /bike/{id}
          method: delete
          cors: true

  scheduledTask:
    handler: handler.scheduledTask
    events:
      - schedule:
          rate: rate(5 minutes)


  processCarChanges:
    handler: handler.processBikeChanges
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - BikesTable
              - StreamArn

  handleSnsNotification:
    handler: handler.handleSnsNotification
    events:
      - sns: bikeNotification

  sendCarsSummary:
    handler: handler.sendBikesSummary
    events:
      - schedule: rate(1 day)

resources:
  Resources:
    EventsDynanoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.BIKES_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE

    EventNotificationTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: bikeNotification